import java.text.SimpleDateFormat

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.6.+'
    }
}
apply plugin: 'android'

repositories {
    maven { url "http://dl.bintray.com/populov/maven" }
    mavenCentral()
}

def gitSha() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}

def buildTime() {
    def df = new SimpleDateFormat("ddMMyyyy")
    df.setTimeZone(TimeZone.getTimeZone("UTC"))
    return df.format(new Date())
}

def soundcloud = new Properties()
file("soundcloud.properties").withInputStream {
    stream -> soundcloud.load(stream)
}

android {
    compileSdkVersion 18
    buildToolsVersion "19"

    defaultConfig {
        minSdkVersion 7
        targetSdkVersion 18

        versionCode 1
        versionName "0.9.0-${gitSha()}-${buildTime()}"

        buildConfig """\
            public static final String CLIENT_ID = \"${soundcloud.client_id}\";
            public static final String CLIENT_SECRET = \"${soundcloud.client_secret}\";
        """
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
        }

        release {
            // Make Android Studio stop complaining for null console object; Use this config from cmd
            if (System.console() != null) {
                storeFile file("release.keystore")
                keyAlias "soundscreen"
                // Without this ugly hack there is no installRelease task, so it is not possible to
                // build signed *-release.apk with custom readPasswordFromInput task
                storePassword ""
                keyPassword ""
            }
        }
    }

    buildTypes {
        debug {
            packageNameSuffix ".debug"
            versionNameSuffix = "-DEBUG"
            signingConfig signingConfigs.debug
        }

        release {
            debuggable false
            runProguard true
            proguardFile file("proguard.cfg")
            signingConfig signingConfigs.release
        }
    }

    applicationVariants.all { variant ->
        // alter the default outputFile to include versionName suffix
        variant.outputFile = file(variant.outputFile.name.replace(".apk", "-${variant.mergedFlavor.versionName}.apk"))

        // print the APK path after assemble is done
        variant.assemble.doLast {
            println variant.outputFile
        }

        // print the APK path as the last step before install, at which point the apk is complete
        variant.install?.doFirst { // the install task can be null
            println variant.outputFile
        }
    }
}

task('readPasswordFromInput') << {
    android.signingConfigs.release {
        // NOTE: The System.console() call returns null if running using "gradle --daemon" for Java 6
        storePassword = new String(System.console().readPassword("\n\$ Enter keystore password: "))
        keyPassword = new String(System.console().readPassword("\n\$ Enter key password: "))
    }
}

tasks.whenTaskAdded { task ->
    if (task.name.matches("validateReleaseSigning")) {
        task.dependsOn('readPasswordFromInput')
    }
}

dependencies {
    compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'
    compile 'com.android.support:support-v4:19.0.+'

//    compile 'com.squareup.okhttp:okhttp:1.2.1'
    compile 'com.soundcloud:java-api-wrapper:1.3.1'
    compile 'com.google.code.gson:gson:2.2.4'

    compile 'com.viewpagerindicator:library:2.4.1@aar'

    instrumentTestCompile 'com.squareup:fest-android:1.0.+'
}
